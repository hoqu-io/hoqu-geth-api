{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Provides all projects the opportunity to access Ethereum blockchain through RESTful API.",
    "title": "HOQU blockchain API by GoLang.",
    "contact": {
      "name": "Denis Degterin",
      "url": "https://github.com/hoqu-io/hoqu-geth-api",
      "email": "d.degterin@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.1.7"
  },
  "basePath": "/",
  "paths": {
    "/eth/balance/:address": {
      "get": {
        "description": "Get particular Ethereum address balance.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ethereum"
        ],
        "summary": "Get ETH balance",
        "operationId": "getEthBalance",
        "parameters": [
          {
            "type": "string",
            "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD",
            "x-go-name": "Address",
            "description": "Ethereum address",
            "name": "address",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalanceSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/eth/balances": {
      "post": {
        "description": "Get balances for list of Ethereum addresses.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ethereum"
        ],
        "summary": "Get ETH balances",
        "operationId": "getEthBalances",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Addresses"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalancesSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/eth/block": {
      "get": {
        "description": "Get last Ethereum block data.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ethereum"
        ],
        "summary": "Get last block",
        "operationId": "getEthLastBlock",
        "responses": {
          "200": {
            "$ref": "#/responses/GetBlockSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/eth/block/:hash": {
      "get": {
        "description": "Get Ethereum block data by its hash.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ethereum"
        ],
        "summary": "Get block by hash",
        "operationId": "getEthBlockByHash",
        "responses": {
          "200": {
            "$ref": "#/responses/GetBlockSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/hqx/allowance": {
      "get": {
        "description": "Get allowance given by owner of HQX tokens to spender.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "platform"
        ],
        "summary": "Get HQX allowance",
        "operationId": "getHqxAllowance",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AllowanceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetAllowanceSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/hqx/balance/:address": {
      "get": {
        "description": "Get particular Ethereum address HQX balance.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "platform"
        ],
        "summary": "Get HQX balance",
        "operationId": "getHqxBalance",
        "parameters": [
          {
            "type": "string",
            "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD",
            "x-go-name": "Address",
            "description": "Ethereum address",
            "name": "address",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalanceSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/hqx/balances": {
      "post": {
        "description": "Get HQX balances for list of Ethereum addresses.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "platform"
        ],
        "summary": "Get HQX balances",
        "operationId": "getHqxBalances",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Addresses"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetBalancesSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/metamask/challenge": {
      "post": {
        "description": "Create metamask challenge and return challenge data array",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "metamask"
        ],
        "summary": "Create challenge",
        "operationId": "createChallenge",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ChallengeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ChallengeSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/metamask/recover": {
      "post": {
        "description": "Recover metamask challenge signer from result signature",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "metamask"
        ],
        "summary": "Recover signer",
        "operationId": "recoverSigner",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RecoverRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RecoverSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/ad/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "ad_campaigns"
        ],
        "summary": "Get AdCampaign by ID.",
        "operationId": "getAdCampaign",
        "responses": {
          "200": {
            "description": "AdCampaignSuccessData",
            "schema": {
              "$ref": "#/definitions/AdCampaignSuccessData"
            }
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/ad/add": {
      "post": {
        "description": "The Ad is a campaign of the affiliate to promote particular offer.\nThe Ad is created by the affiliate. All widgets placed on affiliate website should be linked to particular Ad.\nThe affiliate can specify money receiver address (beneficiary) per each Ad.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ad_campaigns"
        ],
        "summary": "Add AdCampaign.",
        "operationId": "addAdCampaign",
        "responses": {
          "200": {
            "$ref": "#/responses/AddAdCampaignSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/ad/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "ad_campaigns"
        ],
        "summary": "Set AdCampaign Status.",
        "operationId": "setAdCampaignStatus",
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/company/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "summary": "Get Company by ID.",
        "operationId": "getCompany",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "an ID of the requested entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CompanyDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/company/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "summary": "Register Company.",
        "operationId": "registerCompany",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterCompanyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/company/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "summary": "Set Company Status.",
        "operationId": "setCompanyStatus",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/events": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "platform"
        ],
        "summary": "Get HOQU platform events.",
        "operationId": "events",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Events"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ContractEventResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/identification/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "identifications"
        ],
        "summary": "Get Identification by ID.",
        "operationId": "getIdentification",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "an ID of the requested entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/IdentificationDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/identification/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "identifications"
        ],
        "summary": "Add Identification.",
        "operationId": "addIdentification",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddIdentificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/identification/kyc": {
      "post": {
        "description": "Each Identification has KYC level which reflects his trust level.\nIdentification KYC level can be changed only by KYC reports.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "identifications"
        ],
        "summary": "Add KYC report.",
        "operationId": "addKyc",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddKycReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/lead/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "leads"
        ],
        "summary": "Add Lead.",
        "operationId": "addLead",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddLeadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/lead/get": {
      "post": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "leads"
        ],
        "summary": "Get Lead by ID.",
        "operationId": "getLead",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TransactLeadRequest"
            }
          },
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "AdId",
            "description": "the ID of an Ad Campaign",
            "name": "adId",
            "in": "query"
          },
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "an ID of the requested lead",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/LeadDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/lead/intermediary": {
      "post": {
        "description": "Each intermediary is a money receiver when selling the lead.\nWarning! Lead owner shouldn't be in this list. Owner receives the rest of amount.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "leads"
        ],
        "summary": "Add Lead Intermediary.",
        "operationId": "addLeadIntermediary",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddLeadIntermediaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/lead/price": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "leads"
        ],
        "summary": "Set Lead Price.",
        "operationId": "setLeadPrice",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetLeadPriceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/lead/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "leads"
        ],
        "summary": "Set Lead Status.",
        "operationId": "setLeadStatus",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetLeadStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/lead/transact": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "leads"
        ],
        "summary": "Sell Lead.",
        "operationId": "transactLead",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TransactLeadRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/lead/url": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "leads"
        ],
        "summary": "Set Lead Data URL.",
        "operationId": "setLeadDataUrl",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetLeadDataUrlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/network/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "summary": "Get Network by ID.",
        "operationId": "getNetwork",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "an ID of the requested entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/NetworkDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/network/register": {
      "post": {
        "description": "The Network is an essential part of a platform.\nAll offers can be accessible only through networks.\nMerchants should join networks as well as Affiliates to communicate with each other.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "summary": "Register Network.",
        "operationId": "registerNetwork",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterNetworkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/network/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "summary": "Set Network Status.",
        "operationId": "setNetworkStatus",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/offer/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "summary": "Get Offer by ID.",
        "operationId": "getOffer",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "id of entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/OfferDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/offer/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "summary": "Add Offer.",
        "operationId": "addOffer",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddOfferRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/offer/name": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "summary": "Set Offer Name.",
        "operationId": "setOfferName",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetNameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/offer/payer_address": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "summary": "Set Offer Payer Address.",
        "operationId": "setOfferPayerAddress",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetOfferPayerAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/offer/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "summary": "Set Offer Status.",
        "operationId": "setOfferStatus",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/offer/tariff_group": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "summary": "Add Offer tariff.",
        "operationId": "addOfferTariffGroup",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/IdWithChildIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/stats/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "stats"
        ],
        "summary": "Get Stats by ID.",
        "operationId": "getStats",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "an ID of the requested entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/StatsDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tariff/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "tariffs"
        ],
        "summary": "Get Tariff by ID.",
        "operationId": "getTariff",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "id of entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TariffDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tariff/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "tariffs"
        ],
        "summary": "Add Tariff.",
        "operationId": "addTariff",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddTariffRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tariff/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "tariffs"
        ],
        "summary": "Set Tariff Status.",
        "operationId": "setTariffStatus",
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tariff_group/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "tariff_groups"
        ],
        "summary": "Get TariffGroup by ID.",
        "operationId": "getTariffGroup",
        "responses": {
          "200": {
            "$ref": "#/responses/TariffGroupDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tariff_group/add": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "tariff_groups"
        ],
        "summary": "Add TariffGroup.",
        "operationId": "addTariffGroup",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddTariffGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tariff_group/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "tariff_groups"
        ],
        "summary": "Set TariffGroup Status.",
        "operationId": "setTariffGroupStatus",
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tracker/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "trackers"
        ],
        "summary": "Get Tracker by ID.",
        "operationId": "getTracker",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "an ID of the requested entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TrackerDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tracker/register": {
      "post": {
        "description": "The Tracker is an application which receives visitor's requests to show the appropriate widget.\nAll widgets can be created in terms of appropriate Ad (affiliate promotion campaign).\nIf visitor interacts with a widget the Tracker creates the Lead and push it to Blockchain.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trackers"
        ],
        "summary": "Register Tracker.",
        "operationId": "registerTracker",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterTrackerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/tracker/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "trackers"
        ],
        "summary": "Set Tracker Status.",
        "operationId": "setTrackerStatus",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/user/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Get User by ID.",
        "operationId": "getUser",
        "parameters": [
          {
            "type": "string",
            "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b",
            "x-go-name": "Id",
            "description": "id of entity",
            "name": "id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UserDataResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/user/address": {
      "post": {
        "description": "Each User can have several Ethereum addresses.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Add User Ethereum Address.",
        "operationId": "addUserAddress",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AddUserAddressRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/user/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Register User.",
        "operationId": "registerUser",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    },
    "/platform/user/status": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "summary": "Set User Status.",
        "operationId": "setUserStatus",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SetStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/TxSuccessResponse"
          },
          "400": {
            "$ref": "#/responses/RestErrorResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "AdCampaign": {
      "description": "Ad Model",
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad Campaign from Ad Contract",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "beneficiaryAddress": {
          "description": "Ethereum address of the beneficiary (Ad money receiver)",
          "type": "string",
          "x-go-name": "BeneficiaryAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "contractAddress": {
          "description": "Ethereum address of the contract serving the ad campaign",
          "type": "string",
          "x-go-name": "ContractAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "createdAt": {
          "description": "ISO8601 datetime format",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt",
          "example": "2009-11-13T10:39:35Z"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "offerId": {
          "description": "the ID of an Offer the entity is linked to",
          "type": "string",
          "x-go-name": "OfferId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "payerAddress": {
          "description": "Ethereum address of the Offer payer (who will pay for leads)",
          "type": "string",
          "x-go-name": "PayerAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AdCampaignSuccessData": {
      "type": "object",
      "properties": {
        "Ad": {
          "$ref": "#/definitions/AdCampaign"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddAdCampaignRequest": {
      "type": "object",
      "properties": {
        "beneficiaryAddress": {
          "description": "Ethereum address of the beneficiary (Ad money receiver)",
          "type": "string",
          "x-go-name": "BeneficiaryAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "offerId": {
          "description": "the ID of an Offer the entity is linked to",
          "type": "string",
          "x-go-name": "OfferId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddIdentificationRequest": {
      "type": "object",
      "properties": {
        "companyId": {
          "description": "an ID of the company for company type identifications",
          "type": "string",
          "x-go-name": "CompanyId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "idType": {
          "description": "identification type",
          "type": "string",
          "x-go-name": "IdType",
          "example": "person|company"
        },
        "name": {
          "description": "name",
          "type": "string",
          "x-go-name": "Name",
          "example": "John Snow"
        },
        "userId": {
          "description": "an ID of the user",
          "type": "string",
          "x-go-name": "UserId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddKycReportRequest": {
      "type": "object",
      "properties": {
        "dataUrl": {
          "description": "the URL with full report data",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "id": {
          "description": "an ID of the identification",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "kycLevel": {
          "description": "Higher the level more trust this user has from other participants",
          "type": "integer",
          "format": "uint8",
          "x-go-name": "KycLevel",
          "example": 3
        },
        "meta": {
          "description": "Meta data of the report in string format (JSON for example)",
          "type": "string",
          "x-go-name": "Meta"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddLeadIntermediaryRequest": {
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad Campaign",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "address": {
          "description": "Ethereum address of the intermediary",
          "type": "string",
          "x-go-name": "Address",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "id": {
          "description": "Lead ID the intermediary is adding to",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "percent": {
          "description": "the percent of a final price of the Lead this intermediary should receive",
          "type": "number",
          "format": "float",
          "x-go-name": "Percent",
          "example": 0.045
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddLeadRequest": {
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad the lead was created for",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "dataUrl": {
          "description": "the full lead data URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "meta": {
          "description": "Lead meta data in JSON",
          "type": "string",
          "x-go-name": "Meta",
          "example": "{\"country\": \"DE\", \"ip\": \"123.44.55.66\"}"
        },
        "price": {
          "description": "the final price of the lead in HQX",
          "type": "string",
          "x-go-name": "Price",
          "example": "25000000000000000"
        },
        "trackerId": {
          "description": "the ID of a Tracker created the lead",
          "type": "string",
          "x-go-name": "TrackerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddOfferRequest": {
      "type": "object",
      "properties": {
        "dataUrl": {
          "description": "the offer full data URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "merchantId": {
          "description": "the ID of a Merchant owning this offer",
          "type": "string",
          "x-go-name": "MerchantId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "name": {
          "description": "the name of the Offer",
          "type": "string",
          "x-go-name": "Name"
        },
        "networkId": {
          "description": "the ID of the Network the offer is linked to",
          "type": "string",
          "x-go-name": "NetworkId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "payerAddress": {
          "description": "Ethereum address of the Offer payer (who will pay for leads)",
          "type": "string",
          "x-go-name": "PayerAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddTariffGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "the name of the TariffGroup",
          "type": "string",
          "x-go-name": "Name"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddTariffRequest": {
      "type": "object",
      "properties": {
        "action": {
          "description": "the name of the action when tariff is applied",
          "type": "string",
          "x-go-name": "Action"
        },
        "calcMethod": {
          "description": "the method of lead price calculation",
          "type": "string",
          "x-go-name": "CalcMethod",
          "example": "percent|fixed"
        },
        "name": {
          "description": "the name of the Tariff",
          "type": "string",
          "x-go-name": "Name"
        },
        "price": {
          "description": "the price of a lead calculated by the tariff in wei\nor the percent value",
          "type": "string",
          "x-go-name": "Price",
          "example": "25000000000000000"
        },
        "tariffGroupId": {
          "description": "the ID of a Tariff Group",
          "type": "string",
          "x-go-name": "TariffGroupId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AddUserAddressRequest": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Ethereum address of the user",
          "type": "string",
          "x-go-name": "Address",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "id": {
          "description": "an ID of the user",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "Address": {
      "type": "array",
      "title": "Address represents the 20 byte address of an Ethereum account.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "hoqu-geth-api/vendor/github.com/ethereum/go-ethereum/common"
    },
    "Addresses": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Addresses"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "AllowanceRequest": {
      "type": "object",
      "properties": {
        "owner": {
          "description": "Ethereum address of token's owner",
          "type": "string",
          "x-go-name": "Owner",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "spender": {
          "description": "Ethereum address of a spender",
          "type": "string",
          "x-go-name": "Spender",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "BlockNonce": {
      "description": "A BlockNonce is a 64-bit hash which proves (combined with the\nmix-hash) that a sufficient amount of computation has been carried\nout on a block.",
      "type": "array",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "hoqu-geth-api/vendor/github.com/ethereum/go-ethereum/core/types"
    },
    "Bloom": {
      "type": "array",
      "title": "Bloom represents a 2048 bit bloom filter.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "hoqu-geth-api/vendor/github.com/ethereum/go-ethereum/core/types"
    },
    "ChallengeRequest": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Ethereum address of the signer",
          "type": "string",
          "x-go-name": "Address",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        }
      },
      "x-go-package": "hoqu-geth-api/sdk/geth/metamask"
    },
    "CompanyData": {
      "description": "Company Model",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "unix timestamp",
          "type": "string",
          "x-go-name": "CreatedAt",
          "example": "1518957879"
        },
        "dataUrl": {
          "description": "the company description URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "name": {
          "description": "the name of the company",
          "type": "string",
          "x-go-name": "Name",
          "example": "HOQU LLC"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "CreateAdCampaignResponseData": {
      "type": "object",
      "properties": {
        "contractAddress": {
          "description": "Ethereum address of the contract serving the ad campaign",
          "type": "string",
          "x-go-name": "ContractAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "id": {
          "description": "id of created entity",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "tx": {
          "description": "Ethereum transaction hash",
          "type": "string",
          "x-go-name": "Tx",
          "example": "0x23682ef776bfb465433e8f6a6e84eab71f039f039e86933aeca20ee46d01d576"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "CreateResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "description": "id of created entity",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "tx": {
          "description": "Ethereum transaction hash",
          "type": "string",
          "x-go-name": "Tx",
          "example": "0x23682ef776bfb465433e8f6a6e84eab71f039f039e86933aeca20ee46d01d576"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "Events": {
      "type": "object",
      "properties": {
        "addresses": {
          "description": "filter events by list of Ethereum addresses",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Addresses"
        },
        "endBlock": {
          "description": "get events to specified block",
          "type": "integer",
          "format": "int64",
          "x-go-name": "EndBlock"
        },
        "eventNames": {
          "description": "filter events by list of event names",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "EventNames"
        },
        "startBlock": {
          "description": "get events from specified block",
          "type": "integer",
          "format": "int64",
          "x-go-name": "StartBlock"
        }
      },
      "x-go-package": "hoqu-geth-api/sdk/models"
    },
    "Hash": {
      "type": "array",
      "title": "Hash represents the 32 byte Keccak256 hash of arbitrary data.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "hoqu-geth-api/vendor/github.com/ethereum/go-ethereum/common"
    },
    "Header": {
      "type": "object",
      "title": "Header represents a block header in the Ethereum blockchain.",
      "properties": {
        "difficulty": {
          "$ref": "#/definitions/Int"
        },
        "extraData": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "uint8"
          },
          "x-go-name": "Extra"
        },
        "gasLimit": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "GasLimit"
        },
        "gasUsed": {
          "type": "integer",
          "format": "uint64",
          "x-go-name": "GasUsed"
        },
        "logsBloom": {
          "$ref": "#/definitions/Bloom"
        },
        "miner": {
          "$ref": "#/definitions/Address"
        },
        "mixHash": {
          "$ref": "#/definitions/Hash"
        },
        "nonce": {
          "$ref": "#/definitions/BlockNonce"
        },
        "number": {
          "$ref": "#/definitions/Int"
        },
        "parentHash": {
          "$ref": "#/definitions/Hash"
        },
        "receiptsRoot": {
          "$ref": "#/definitions/Hash"
        },
        "sha3Uncles": {
          "$ref": "#/definitions/Hash"
        },
        "stateRoot": {
          "$ref": "#/definitions/Hash"
        },
        "timestamp": {
          "$ref": "#/definitions/Int"
        },
        "transactionsRoot": {
          "$ref": "#/definitions/Hash"
        }
      },
      "x-go-package": "hoqu-geth-api/vendor/github.com/ethereum/go-ethereum/core/types"
    },
    "IdWithChildIdRequest": {
      "type": "object",
      "properties": {
        "childId": {
          "description": "id of child entity",
          "type": "string",
          "x-go-name": "ChildId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "id": {
          "description": "id of entity",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "IdentificationData": {
      "description": "User Model",
      "type": "object",
      "properties": {
        "companyId": {
          "description": "an ID of the company for company type identifications",
          "type": "string",
          "x-go-name": "CompanyId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "createdAt": {
          "description": "unix timestamp",
          "type": "string",
          "x-go-name": "CreatedAt",
          "example": "1518957879"
        },
        "idType": {
          "description": "identification type",
          "type": "string",
          "x-go-name": "IdType",
          "example": "person|company"
        },
        "kycReports": {
          "description": "a list of all KYC reports",
          "x-go-name": "KycReports"
        },
        "name": {
          "description": "name",
          "type": "string",
          "x-go-name": "Name",
          "example": "John Snow"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "userId": {
          "description": "an ID of the user",
          "type": "string",
          "x-go-name": "UserId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "Int": {
      "description": "The zero value for an Int represents the value 0.",
      "type": "object",
      "title": "An Int represents a signed multi-precision integer.",
      "x-go-package": "math/big"
    },
    "Lead": {
      "description": "Lead Model",
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad the lead was created for",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "createdAt": {
          "description": "ISO8601 datetime format",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt",
          "example": "2009-11-13T10:39:35Z"
        },
        "dataUrl": {
          "description": "the full lead data URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "intermediaries": {
          "description": "a list of ethAddress -\u003e percent of all money receivers (except owner itself)",
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "float"
          },
          "x-go-name": "Intermediaries",
          "example": "{\"0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD\": 0.035}"
        },
        "meta": {
          "description": "Lead meta data in JSON",
          "type": "string",
          "x-go-name": "Meta"
        },
        "price": {
          "description": "the final price of the lead in HQX",
          "type": "string",
          "x-go-name": "Price",
          "example": "25000000000000000"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "trackerId": {
          "description": "the ID of a Tracker created the lead",
          "type": "string",
          "x-go-name": "TrackerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "LeadSuccessData": {
      "type": "object",
      "properties": {
        "Lead": {
          "$ref": "#/definitions/Lead"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "NetworkData": {
      "description": "Network Model",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "unix timestamp",
          "type": "string",
          "x-go-name": "CreatedAt",
          "example": "1518957879"
        },
        "dataUrl": {
          "description": "the Network full data URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "name": {
          "description": "the name of the Network",
          "type": "string",
          "x-go-name": "Name"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "Offer": {
      "description": "Offer Model",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "ISO8601 datetime format",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt",
          "example": "2009-11-13T10:39:35Z"
        },
        "dataUrl": {
          "description": "the offer full data URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "merchantId": {
          "description": "the ID of a Merchant owning this offer",
          "type": "string",
          "x-go-name": "MerchantId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "name": {
          "description": "the name of the Offer",
          "type": "string",
          "x-go-name": "Name"
        },
        "networkId": {
          "description": "the ID of the Network the offer is linked to",
          "type": "string",
          "x-go-name": "NetworkId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "payerAddress": {
          "description": "Ethereum address of the Offer payer (who will pay for leads)",
          "type": "string",
          "x-go-name": "PayerAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "tariffGroups": {
          "description": "the cost of the leads in HQX",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "TariffGroups",
          "example": "[\"a6fdb91a-149d-11e8-b642-0ed5f89f718b\"]"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "OfferSuccessData": {
      "type": "object",
      "properties": {
        "Offer": {
          "$ref": "#/definitions/Offer"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "RecoverRequest": {
      "type": "object",
      "properties": {
        "challenge": {
          "description": "Challenge value hash",
          "type": "string",
          "x-go-name": "Challenge",
          "example": "7b9415e1dbbd526c8496f66e3646bbe886245581530d6dfedc9d1e3eb88d879e"
        },
        "sign": {
          "description": "Signature hash",
          "type": "string",
          "x-go-name": "Signature",
          "example": "0x5c71570e112156aec2091af830fe73256044a089b20d2aa209b93258504af2dd1eefa3bd584a701648fe24c79c4388671dad2470b74f67cfdd14c2f1dcb2fa0f1b"
        }
      },
      "x-go-package": "hoqu-geth-api/sdk/geth/metamask"
    },
    "RegisterCompanyRequest": {
      "type": "object",
      "properties": {
        "dataUrl": {
          "description": "the company description URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "name": {
          "description": "the name of the company",
          "type": "string",
          "x-go-name": "Name",
          "example": "HOQU LLC"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "RegisterNetworkRequest": {
      "type": "object",
      "properties": {
        "dataUrl": {
          "description": "the company description URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "name": {
          "description": "the name of the network",
          "type": "string",
          "x-go-name": "Name",
          "example": "HOQU Net"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "RegisterTrackerRequest": {
      "type": "object",
      "properties": {
        "dataUrl": {
          "description": "the Tracker full data URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "name": {
          "description": "the name of the Tracker",
          "type": "string",
          "x-go-name": "Name"
        },
        "networkId": {
          "description": "the ID of the Network the tracker is working for (can be empty)",
          "type": "string",
          "x-go-name": "NetworkId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "RegisterUserRequest": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Ethereum address of the user",
          "type": "string",
          "x-go-name": "Address",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        },
        "pubKey": {
          "description": "all private data available only for that user is encrypted by his public key",
          "type": "string",
          "x-go-name": "PubKey"
        },
        "role": {
          "description": "user role",
          "type": "string",
          "x-go-name": "Role",
          "example": "affiliate"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "SetLeadDataUrlRequest": {
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad Campaign",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "dataUrl": {
          "type": "string",
          "x-go-name": "DataUrl",
          "example": "3"
        },
        "id": {
          "description": "id of the lead",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "SetLeadPriceRequest": {
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad Campaign",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "id": {
          "description": "id of the lead",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "price": {
          "type": "string",
          "x-go-name": "Price",
          "example": "3"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "SetLeadStatusRequest": {
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad Campaign",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "id": {
          "description": "id of the lead",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "SetNameRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "id of entity",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name",
          "example": "HoQu LLC"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "SetOfferPayerAddressRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "id of the offer",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "payerAddress": {
          "description": "Ethereum address of the Offer payer (who will pay for leads)",
          "type": "string",
          "x-go-name": "PayerAddress",
          "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "SetStatusRequest": {
      "type": "object",
      "properties": {
        "id": {
          "description": "id of entity",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "StatsData": {
      "description": "Stats Model",
      "type": "object",
      "properties": {
        "alfa": {
          "description": "reserved stat for future needs",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Alfa",
          "example": 500
        },
        "beta": {
          "description": "reserved stat for future needs",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Beta",
          "example": 245
        },
        "members": {
          "description": "number of related members",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Members",
          "example": 34
        },
        "rating": {
          "description": "current rating",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Rating",
          "example": 650
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "volume": {
          "description": "the total volume in HQX",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Volume",
          "example": 542332
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "Status": {
      "description": "status, one of 0:NotExists, 1:Created, 2:Pending, 3:Active, 4:Done, 5:Declined",
      "type": "integer",
      "format": "uint8",
      "x-go-package": "hoqu-geth-api/models"
    },
    "Tariff": {
      "description": "Tariff Model",
      "type": "object",
      "properties": {
        "action": {
          "description": "the name of the action when tariff is applied",
          "type": "string",
          "x-go-name": "Action"
        },
        "calcMethod": {
          "description": "the method of lead price calculation",
          "type": "string",
          "x-go-name": "CalcMethod",
          "example": "percent|fixed"
        },
        "createdAt": {
          "description": "ISO8601 datetime format",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt",
          "example": "2009-11-13T10:39:35Z"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "description": "the name of the Tariff",
          "type": "string",
          "x-go-name": "Name"
        },
        "price": {
          "description": "the price of a lead calculated by the tariff in wei\nor the percent value",
          "type": "string",
          "x-go-name": "Price",
          "example": "25000000000000000"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "tariffGroupId": {
          "description": "the ID of a Tariff Group",
          "type": "string",
          "x-go-name": "TariffGroupId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "TariffGroup": {
      "description": "TariffGroup Model",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "ISO8601 datetime format",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt",
          "example": "2009-11-13T10:39:35Z"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "description": "the name of the TariffGroup",
          "type": "string",
          "x-go-name": "Name"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "status": {
          "$ref": "#/definitions/Status"
        },
        "tariffs": {
          "description": "a list of tariff ids related to the offer",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Tariffs",
          "example": "[\"a6fdb91a-149d-11e8-b642-0ed5f89f718b\"]"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "TariffGroupSuccessData": {
      "type": "object",
      "properties": {
        "TariffGroup": {
          "$ref": "#/definitions/TariffGroup"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "TariffSuccessData": {
      "type": "object",
      "properties": {
        "Tariff": {
          "$ref": "#/definitions/Tariff"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "TrackerData": {
      "description": "Tracker Model",
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "unix timestamp",
          "type": "string",
          "x-go-name": "CreatedAt",
          "example": "1518957879"
        },
        "dataUrl": {
          "description": "the Tracker full data URL",
          "type": "string",
          "x-go-name": "DataUrl"
        },
        "name": {
          "description": "the name of the Tracker",
          "type": "string",
          "x-go-name": "Name"
        },
        "networkId": {
          "description": "the ID of the Network the tracker is working for (can be empty)",
          "type": "string",
          "x-go-name": "NetworkId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "ownerId": {
          "description": "the ID of an User owned the entity",
          "type": "string",
          "x-go-name": "OwnerId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "TransactLeadRequest": {
      "type": "object",
      "properties": {
        "adId": {
          "description": "the ID of an Ad Campaign",
          "type": "string",
          "x-go-name": "AdId",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        },
        "id": {
          "description": "id of entity",
          "type": "string",
          "x-go-name": "Id",
          "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "TxSuccessData": {
      "type": "object",
      "properties": {
        "tx": {
          "description": "Ethereum transaction hash",
          "type": "string",
          "x-go-name": "Tx",
          "example": "0x23682ef776bfb465433e8f6a6e84eab71f039f039e86933aeca20ee46d01d576"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "TypedParam": {
      "description": "TypedParam Model",
      "type": "object",
      "properties": {
        "name": {
          "description": "param name",
          "type": "string",
          "x-go-name": "Name",
          "example": "challenge"
        },
        "type": {
          "description": "param type",
          "type": "string",
          "x-go-name": "Type",
          "example": "string"
        },
        "value": {
          "description": "param value",
          "type": "object",
          "x-go-name": "Value",
          "example": "7b9415e1dbbd526c8496f66e3646bbe886245581530d6dfedc9d1e3eb88d879e"
        }
      },
      "x-go-package": "hoqu-geth-api/sdk/geth/metamask"
    },
    "User": {
      "description": "User Model",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "a list of Ethereum addresses of the user",
          "x-go-name": "Addresses",
          "example": "[\"0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD\"]"
        },
        "createdAt": {
          "description": "ISO8601 datetime format",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt",
          "example": "2009-11-13T10:39:35Z"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "kycLevel": {
          "description": "Higher the level more trust this user has from other participants",
          "type": "integer",
          "format": "uint8",
          "x-go-name": "KycLevel",
          "example": 3
        },
        "pubKey": {
          "description": "all private data available only for that user is encrypted by his public key",
          "type": "string",
          "x-go-name": "PubKey"
        },
        "role": {
          "description": "user role",
          "type": "string",
          "x-go-name": "Role",
          "example": "affiliate"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    },
    "UserSuccessData": {
      "type": "object",
      "properties": {
        "User": {
          "$ref": "#/definitions/User"
        }
      },
      "x-go-package": "hoqu-geth-api/models"
    }
  },
  "responses": {
    "AdDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/AdCampaignSuccessData"
          }
        }
      }
    },
    "AddAdCampaignSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/CreateAdCampaignResponseData"
          }
        }
      }
    },
    "AddSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/CreateResponseData"
          }
        }
      }
    },
    "ChallengeSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "result": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TypedParam"
                },
                "x-go-name": "Result"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "CompanyDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "Company": {
                "$ref": "#/definitions/CompanyData"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "ContractEventResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "events": {
                "type": "object",
                "properties": {
                  "args": {
                    "description": "event arguments, differ for each event",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "entity ID this event is linked to",
                        "type": "string",
                        "x-go-name": "Id",
                        "example": "a6fdb91a-149d-11e8-b642-0ed5f89f718b"
                      },
                      "ownerAddress": {
                        "description": "Ethereum address this events is linked to",
                        "type": "string",
                        "x-go-name": "OwnerAddress",
                        "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
                      },
                      "status": {
                        "$ref": "#/definitions/Status"
                      }
                    },
                    "x-go-name": "Args"
                  },
                  "blockHash": {
                    "type": "string",
                    "x-go-name": "BlockHash"
                  },
                  "blockNumber": {
                    "description": "Ethereum block number event was raised in",
                    "type": "integer",
                    "format": "uint64",
                    "x-go-name": "BlockNumber",
                    "example": 4589232
                  },
                  "blockTime": {
                    "type": "string",
                    "x-go-name": "BlockTime"
                  },
                  "name": {
                    "description": "event name",
                    "type": "string",
                    "x-go-name": "Name",
                    "example": "LeadStatusChanged"
                  },
                  "removed": {
                    "type": "boolean",
                    "x-go-name": "Removed"
                  },
                  "transactionHash": {
                    "description": "Ethereum transaction hash",
                    "type": "string",
                    "x-go-name": "TxHash",
                    "example": "0x23682ef776bfb465433e8f6a6e84eab71f039f039e86933aeca20ee46d01d576"
                  },
                  "transactionIndex": {
                    "type": "integer",
                    "format": "uint64",
                    "x-go-name": "TxIndex"
                  }
                },
                "x-go-name": "Events"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "GetAllowanceSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "allowance": {
                "description": "HQX allowance in wei",
                "type": "string",
                "x-go-name": "Allowance",
                "example": "42340000000000000000"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "GetBalanceSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "address": {
                "description": "Ethereum address",
                "type": "string",
                "x-go-name": "Address",
                "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
              },
              "balance": {
                "description": "Ethereum address balance",
                "type": "string",
                "x-go-name": "Balance",
                "example": "42340000000000000000"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "GetBalancesSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "balances": {
                "description": "Ethereum address balances list",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-go-name": "Balances",
                "example": "{\"0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD\": \"42340000000000000000\"}"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "GetBlockSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "hash": {
                "description": "Block hash",
                "type": "string",
                "x-go-name": "Hash",
                "example": "0x43dbc6e17450307c226e78cc1146a15662fb2ff16369d0e5c24652576b9d8e5e"
              },
              "number": {
                "description": "Block number",
                "type": "string",
                "x-go-name": "Number",
                "example": "5349009"
              },
              "raw": {
                "$ref": "#/definitions/Header"
              },
              "timestamp": {
                "description": "Block creation timestamp",
                "type": "string",
                "x-go-name": "Timestamp",
                "example": "1522415005"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "IdentificationDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "identification": {
                "$ref": "#/definitions/IdentificationData"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "LeadDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/LeadSuccessData"
          }
        }
      }
    },
    "NetworkDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "Network": {
                "$ref": "#/definitions/NetworkData"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "OfferDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/OfferSuccessData"
          }
        }
      }
    },
    "RecoverSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "address": {
                "description": "Ethereum address of the signer",
                "type": "string",
                "x-go-name": "Address",
                "example": "0xED2F74E1fb73b775E6e35720869Ae7A7f4D755aD"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "RestErrorResponse": {
      "description": "Error",
      "schema": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "description": "error code",
                "type": "string",
                "x-go-name": "Code",
                "example": "VALIDATION_ERROR"
              },
              "message": {
                "description": "error description",
                "type": "string",
                "x-go-name": "Message",
                "example": "id should be in UUID format"
              }
            },
            "x-go-name": "Error"
          }
        }
      }
    },
    "StatsDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "Stats": {
                "$ref": "#/definitions/StatsData"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "TariffDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/TariffSuccessData"
          }
        }
      }
    },
    "TariffGroupDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/TariffGroupSuccessData"
          }
        }
      }
    },
    "TrackerDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "Tracker": {
                "$ref": "#/definitions/TrackerData"
              }
            },
            "x-go-name": "Data"
          }
        }
      }
    },
    "TxSuccessResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/TxSuccessData"
          }
        }
      }
    },
    "UserDataResponse": {
      "description": "Success",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/UserSuccessData"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "hash": {
      "type": "apiKey",
      "name": "X-Sign",
      "in": "header"
    },
    "jwt": {
      "type": "apiKey",
      "name": "X-Authorization",
      "in": "header"
    }
  }
}